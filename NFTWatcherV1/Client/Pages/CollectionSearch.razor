@page "/search/{searchText}"
@inject IGenieService SearchService
@inject NavigationManager NavigationManager

@if (collections is not null && collections.Count > 0)
{
    <MudContainer Class="pt-8">
        @foreach (var collection in collections)
        {
            <MudCard Class="pa-2 ma-4" Elevation="6">
                <MudCardHeader>
                    <CardHeaderAvatar>
                        <MudAvatar Image="@collection.imageUrl" />
                    </CardHeaderAvatar>
                    <CardHeaderContent>
                        <MudLink Class="d-inline"
                                 Typo="Typo.body1"
                                 @onclick="(() => GoToCollectionPage(collection.address))"
                                 Underline="Underline.None"
                                 Color="Color.Default"
                                 >@collection.Name</MudLink>
                        @if (collection.isVerified)
                        {
                            <MudIcon Class="d-inline pl-1 pb-1"
                                     Icon="@Icons.Material.Filled.Verified"
                                     Color="Color.Info" />
                        }
                        <MudText Typo="Typo.body2" >
                            @(collection.floorPrice is null ? "Floor Unavailable" : $"{Math.Round(collection.floorPrice.Value, 4)} ETH")</MudText>
                    </CardHeaderContent>
                    <CardHeaderActions>
                        <MudIconButton Icon="@Icons.Material.Filled.Add" Color="Color.Success" />
                    </CardHeaderActions>
                </MudCardHeader>
            </MudCard>
        }
    </MudContainer>
}

@code {
    private List<Collection> collections = new List<Collection>();

    [Parameter]
    public string searchText { get; set; } = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        if (string.IsNullOrEmpty(searchText))
            return;

        var result = await SearchService.GetCollections(searchText);

        if (result is not null && result.Success)
            collections = result.Data!;

        foreach (var c in collections)
        {
            Console.WriteLine($"Average price of {c.Name} is {c.stats.average_price}");
        }
    }

    public void GoToCollectionPage(string address)
    {
        NavigationManager.NavigateTo($"/collection/{address}");
    }
}
